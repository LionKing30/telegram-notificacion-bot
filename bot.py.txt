import requests  # Permite obtener informaciÃ³n de TikTok
import schedule  # Nos ayuda a programar tareas automÃ¡ticas
import time  # Permite que el bot espere entre verificaciones
from telegram import Bot  # Conecta nuestro bot con Telegram

TELEGRAM_TOKEN = "7309264886:AAEUoBIge4vk9KRDwipvvLd2G6LfIbnryZo"
CHAT_ID = -2698687147
RAPIDAPI_KEY = "bc0c302a76mshec261e85d04d4bep1392d9jsn35e99710ccac"
TIKTOK_USERNAME = "lion.king.business"

bot = Bot(token=TELEGRAM_TOKEN)  # Conectar el bot de Telegram
ultimo_video = None  # GuardarÃ¡ el Ãºltimo video publicado

def obtener_ultimo_video():
    """Consulta la API para obtener el Ãºltimo video de un usuario de TikTok."""
    global ultimo_video
    url = f"https://tiktok-video-no-watermark2.p.rapidapi.com/user/posts?unique_id={TIKTOK_USERNAME}&count=1"
    
    headers = {
        "X-RapidAPI-Key": RAPIDAPI_KEY,
        "X-RapidAPI-Host": "tiktok-video-no-watermark1.p.rapidapi.com"
    }

    response = requests.get(url, headers=headers)  # Hacemos la solicitud a TikTok
    if response.status_code == 200:
        data = response.json()
        if "data" in data and len(data["data"]) > 0:
            video = data["data"][0]
            video_id = video["id"]
            video_url = video["play"]
            
            if video_id != ultimo_video:
                ultimo_video = video_id
                mensaje = f"ðŸŽ¥ Â¡Nuevo video en TikTok de @{TIKTOK_USERNAME}!\nðŸ”— {video_url}"
                bot.send_message(chat_id=CHAT_ID, text=mensaje)
    else:
        print("Error al obtener los datos de TikTok:", response.text)

def verificar_live():
    """Consulta la API para ver si el usuario estÃ¡ en vivo."""
    url = f"https://tiktok-video-no-watermark2.p.rapidapi.com/user/posts?unique_id={TIKTOK_USERNAME}&count=1"
    
    headers = {
        "X-RapidAPI-Key": RAPIDAPI_KEY,
        "X-RapidAPI-Host": "tiktok-video-no-watermark1.p.rapidapi.com"
    }

    response = requests.get(url, headers=headers)
    if response.status_code == 200:
        data = response.json()
        if data["is_live"]:
            live_url = data["live_url"]
            mensaje = f"ðŸš¨ Â¡@{TIKTOK_USERNAME} estÃ¡ en vivo en TikTok! ðŸ“º\nðŸ”— {live_url}"
            bot.send_message(chat_id=CHAT_ID, text=mensaje)
    else:
        print("Error al verificar live:", response.text)

# ðŸ”¹ Programamos las verificaciones cada 5 minutos
schedule.every(5).minutes.do(obtener_ultimo_video)
schedule.every(5).minutes.do(verificar_live)

# ðŸ”¹ Bucle infinito para ejecutar las tareas programadas
while True:
    schedule.run_pending()
    time.sleep(60)
